name: deploy_API_Staging

on:

   workflow_dispatch:
   
env:
  STAGING_VM_ID: i-0761b0df18c056c1b
  JMETER_PATH: $HOME/apache-jmeter-5.5/bin # path to jmeter installation folder
 
   
jobs:
   prepare_staging_vm:
      runs-on: ubuntu-latest
      
      steps:
      
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
       - name: start_staging_vm
         run: |
            echo $STAGING_VM_ID
            aws ec2 start-instances --instance-ids $STAGING_VM_ID

            
#       - name: start staging_vm 
#         uses: flyweightrocks/aws-ec2-action@v1
#         with:
#            # staging machine
#            instance-id: i-0761b0df18c056c1b   
#            wait-instance-running: true
#            stop-instance: true     

   
   deploy_model_api_to_staging:
     needs: prepare_staging_vm
     runs-on: [self-hosted, farmy_aws]

     steps:
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
      
#       - name: install aws cli
#         uses: chrislennon/action-aws-cli@v1.1
         
#       - name: test aws cli  
#         run: aws s3 ls
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            
 
         
       - name : initialization and some checks
         run: |
            cd $HOME
            pwd
            ls
            
       - name: pull API image
         run: |
          sudo docker pull khaldi22/api_imag
          sudo docker images
          
       - name: Run model api docker 
         run: |
            sudo docker rm -f api_staging && sudo docker run -di --name api_staging -p 80:8080  khaldi22/api_imag  
            
         
       - name: launch performance testing 
 
         run: |
            #run fonctionnel api test 
            rm functionnel_test_result.csv
            $JMETER_PATH/jmeter -n -t functionnel_testing_model_api.jmx  -l  functionnel_test_result.csv   

       - name: launch performance testing (faire un fichier special au api)
         run: |
            rm -r performance_report
            rm performance_result.csv
            $JMETER_PATH/jmeter -n -t performance_test_model_api.jmx  -l  performance_test_model_api_result.csv   -e -o performance_report_model_api.html
            echo do_it_later
            
            #cd $HOME
            #ls
            #rm -r reportmy.html
            #rm resultjmeter.csv
            #./apache-jmeter-5.5/bin/jmeter -n -t test_nginx_server_gcp.jmx  -l  resultjmeter.csv   -e -o reportmy.html
       - name: API deployed seccussfuly to staging please (verify performance report)
         run: |
            echo "upload report to s3/ un dossier avec le timestamp_staging" 


   shutdown_staging_vm:
      runs-on: ubuntu-latest
      needs: [prepare_staging_vm, deploy_model_api_to_staging]
      if: ${{ always() }}
      
      steps:
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
            
       - name: stop staging vm
         run:  aws ec2 stop-instances --instance-ids $STAGING_VM_ID

 
      
      
      



         
